// <auto-generated />
using System;
using AI_Agent_WebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AI_Agent_WebApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250511063833_UpdateAgentSeedData")]
    partial class UpdateAgentSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AI_Agent_WebApp.Models.Entities.Agent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Agents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Công cụ AI cho đồ họa và UX/UI",
                            ImagePath = "wwwroot/images/agents/NovaFlux.png",
                            IsActive = true,
                            Name = "NovaFlux",
                            PaymentTypeId = 1,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 1, 2, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Công cụ AI hỗ trợ công trình học thuật",
                            ImagePath = "wwwroot/images/agents/QuantaNova.png",
                            IsActive = true,
                            Name = "QuantaNova",
                            PaymentTypeId = 2,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 1, 3, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Phân tích và mô phỏng dữ liệu khoa học",
                            ImagePath = "wwwroot/images/agents/ByteWarden.png",
                            IsActive = true,
                            Name = "ByteWarden",
                            PaymentTypeId = 3,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 1, 4, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "AI quản lý lịch trình và nhắc việc",
                            ImagePath = "wwwroot/images/agents/EchoPulse.png",
                            IsActive = true,
                            Name = "EchoPulse",
                            PaymentTypeId = 4,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 1, 5, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Hỗ trợ phát triển phần mềm thông minh",
                            ImagePath = "wwwroot/images/agents/ZenithBot.png",
                            IsActive = true,
                            Name = "ZenithBot",
                            PaymentTypeId = 1,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2024, 1, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "AI hỗ trợ ra quyết định từ dữ liệu",
                            ImagePath = "wwwroot/images/agents/AstroSage.png",
                            IsActive = true,
                            Name = "AstroSage",
                            PaymentTypeId = 2,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2024, 1, 7, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Chiến lược tiếp thị được tối ưu bằng AI",
                            ImagePath = "wwwroot/images/agents/GlimmerAI.png",
                            IsActive = true,
                            Name = "GlimmerAI",
                            PaymentTypeId = 3,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2024, 1, 8, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "AI viết nội dung và tạo ý tưởng sáng tạo",
                            ImagePath = "wwwroot/images/agents/OrbitalNest.png",
                            IsActive = true,
                            Name = "OrbitalNest",
                            PaymentTypeId = 4,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 9,
                            CreatedAt = new DateTime(2024, 1, 9, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Nhận diện và phản hồi giọng nói tự nhiên",
                            ImagePath = "wwwroot/images/agents/Synthara.png",
                            IsActive = true,
                            Name = "Synthara",
                            PaymentTypeId = 1,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 10,
                            CreatedAt = new DateTime(2024, 1, 10, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Hỗ trợ đầu tư và quản lý tài chính cá nhân",
                            ImagePath = "wwwroot/images/agents/ChronaEdge.png",
                            IsActive = true,
                            Name = "ChronaEdge",
                            PaymentTypeId = 2,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 1, 11, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Công cụ AI cho đồ họa và UX/UI",
                            ImagePath = "wwwroot/images/agents/VantaSpark.png",
                            IsActive = true,
                            Name = "VantaSpark",
                            PaymentTypeId = 3,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 1, 12, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Phân tích và tổng hợp tài liệu nhanh chóng",
                            ImagePath = "wwwroot/images/agents/LucidForge.png",
                            IsActive = true,
                            Name = "LucidForge",
                            PaymentTypeId = 4,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 1, 13, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tăng hiệu quả nghiên cứu khoa học",
                            ImagePath = "wwwroot/images/agents/NeuraWhirl.png",
                            IsActive = true,
                            Name = "NeuraWhirl",
                            PaymentTypeId = 1,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 1, 14, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Trợ lý ảo cá nhân thông minh",
                            ImagePath = "wwwroot/images/agents/PrismShift.png",
                            IsActive = true,
                            Name = "PrismShift",
                            PaymentTypeId = 2,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 1, 15, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tăng tốc viết mã và kiểm tra lỗi",
                            ImagePath = "wwwroot/images/agents/HexaTune.png",
                            IsActive = true,
                            Name = "HexaTune",
                            PaymentTypeId = 3,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2024, 1, 16, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "AI hỗ trợ ra quyết định từ dữ liệu",
                            ImagePath = "wwwroot/images/agents/default-agent.png",
                            IsActive = true,
                            Name = "OmniScribe",
                            PaymentTypeId = 4,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2024, 1, 17, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Phân tích thị trường và hành vi khách hàng",
                            ImagePath = "wwwroot/images/agents/default-agent.png",
                            IsActive = true,
                            Name = "AeroMind",
                            PaymentTypeId = 1,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2024, 1, 18, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Trợ lý sáng tạo cho viết bài và video",
                            ImagePath = "wwwroot/images/agents/default-agent.png",
                            IsActive = true,
                            Name = "PulseCraft",
                            PaymentTypeId = 2,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 9,
                            CreatedAt = new DateTime(2024, 1, 19, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Nhận diện và phản hồi giọng nói tự nhiên",
                            ImagePath = "wwwroot/images/agents/default-agent.png",
                            IsActive = true,
                            Name = "TerraByte",
                            PaymentTypeId = 3,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 10,
                            CreatedAt = new DateTime(2024, 1, 20, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Theo dõi dòng tiền và lập kế hoạch tài chính",
                            ImagePath = "wwwroot/images/agents/default-agent.png",
                            IsActive = true,
                            Name = "NexonNode",
                            PaymentTypeId = 4,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 1, 21, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Hỗ trợ thiết kế sáng tạo chuyên nghiệp",
                            ImagePath = "wwwroot/images/agents/default-agent.png",
                            IsActive = true,
                            Name = "StellarWeave",
                            PaymentTypeId = 1,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 1, 22, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Công cụ AI hỗ trợ công trình học thuật",
                            ImagePath = "wwwroot/images/agents/default-agent.png",
                            IsActive = true,
                            Name = "QuirkBot",
                            PaymentTypeId = 2,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 1, 23, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Hỗ trợ khám phá khoa học bằng AI",
                            ImagePath = "wwwroot/images/agents/default-agent.png",
                            IsActive = true,
                            Name = "CodeRipple",
                            PaymentTypeId = 3,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 1, 24, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Trợ lý ảo cá nhân thông minh",
                            ImagePath = "wwwroot/images/agents/default-agent.png",
                            IsActive = true,
                            Name = "VoxenCore",
                            PaymentTypeId = 4,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 1, 25, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tăng tốc viết mã và kiểm tra lỗi",
                            ImagePath = "wwwroot/images/agents/default-agent.png",
                            IsActive = true,
                            Name = "MindLoom",
                            PaymentTypeId = 1,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2024, 1, 26, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Phân tích dữ liệu chuyên sâu bằng AI",
                            ImagePath = "wwwroot/images/agents/default-agent.png",
                            IsActive = true,
                            Name = "KairoUnit",
                            PaymentTypeId = 2,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2024, 1, 27, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Phân tích thị trường và hành vi khách hàng",
                            ImagePath = "wwwroot/images/agents/default-agent.png",
                            IsActive = true,
                            Name = "LumenQuest",
                            PaymentTypeId = 3,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2024, 1, 28, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Trợ lý sáng tạo cho viết bài và video",
                            ImagePath = "wwwroot/images/agents/default-agent.png",
                            IsActive = true,
                            Name = "RiftSync",
                            PaymentTypeId = 4,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 9,
                            CreatedAt = new DateTime(2024, 1, 29, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Nhận diện và phản hồi giọng nói tự nhiên",
                            ImagePath = "wwwroot/images/agents/default-agent.png",
                            IsActive = true,
                            Name = "CerebraLink",
                            PaymentTypeId = 1,
                            SupplierId = 1
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 10,
                            CreatedAt = new DateTime(2024, 1, 30, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tư vấn và phân tích tài chính bằng AI",
                            ImagePath = "wwwroot/images/agents/default-agent.png",
                            IsActive = true,
                            Name = "HaloNest",
                            PaymentTypeId = 2,
                            SupplierId = 1
                        });
                });

            modelBuilder.Entity("AI_Agent_WebApp.Models.Entities.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("AI_Agent_WebApp.Models.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Design"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Research"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Science"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Personal Assistant"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Coding"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Data Analysis"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Marketing"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Content Creation"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Voice AI Agents"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Finance"
                        });
                });

            modelBuilder.Entity("AI_Agent_WebApp.Models.Entities.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Free"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Paid"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Paid+Free"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Deal"
                        });
                });

            modelBuilder.Entity("AI_Agent_WebApp.Models.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgentId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("AI_Agent_WebApp.Models.Entities.SystemLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SystemLogs");
                });

            modelBuilder.Entity("AI_Agent_WebApp.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator().HasValue("User");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@example.com",
                            FullName = "Admin User",
                            PasswordHash = "adminhash",
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 2, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user1@example.com",
                            FullName = "User One",
                            PasswordHash = "user1hash",
                            Role = "User",
                            Username = "user1"
                        });
                });

            modelBuilder.Entity("AI_Agent_WebApp.Models.Entities.Staff", b =>
                {
                    b.HasBaseType("AI_Agent_WebApp.Models.Entities.User");

                    b.HasDiscriminator().HasValue("Staff");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 1, 4, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "staff1@example.com",
                            FullName = "Staff One",
                            PasswordHash = "staffhash",
                            Role = "Staff",
                            Username = "staff1"
                        });
                });

            modelBuilder.Entity("AI_Agent_WebApp.Models.Entities.Supplier", b =>
                {
                    b.HasBaseType("AI_Agent_WebApp.Models.Entities.User");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyWebsite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Supplier");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 1, 3, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "supplier1@example.com",
                            FullName = "Supplier One",
                            PasswordHash = "supplierhash",
                            Role = "Supplier",
                            Username = "supplier1",
                            CompanyName = "Cty AI",
                            CompanyWebsite = "https://ai-company.com",
                            Status = true
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
