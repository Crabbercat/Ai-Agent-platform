@model AI_Agent_WebApp.Models.ViewModels.AgentSearchViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "T√¨m ki·∫øm AI Agent";
}
@section Head {
    <link rel="stylesheet" href="~/css/site-agents.css" />
}
<div class="hero">
    <h1>T√¨m ki·∫øm AI Agent</h1>
    <div class="search-box d-flex align-items-center">
        <input type="text" name="SearchTerm" id="searchTerm" placeholder="T√¨m ki·∫øm AI, tags, ho·∫∑c danh m·ª•c..." class="form-control me-2" value="@Model.SearchTerm" />
        <select name="CategoryId" id="categoryId" class="form-select me-2" style="width: 180px;">
            <option value="">T·∫•t c·∫£ danh m·ª•c</option>
            @foreach (var cat in Model.Categories)
            {
                if (Model.CategoryId == cat.Id)
                {
                    <option value="@cat.Id" selected>@cat.Name</option>
                }
                else
                {
                    <option value="@cat.Id">@cat.Name</option>
                }
            }
        </select>
        <select name="PaymentTypeId" id="paymentTypeId" class="form-select me-2" style="width: 180px;">
            <option value="">T·∫•t c·∫£ lo·∫°i tr·∫£ ph√≠</option>
            @foreach (var pt in Model.PaymentTypes)
            {
                if (Model.PaymentTypeId == pt.Id)
                {
                    <option value="@pt.Id" selected>@pt.Name</option>
                }
                else
                {
                    <option value="@pt.Id">@pt.Name</option>
                }
            }
        </select>
        <button class="btn btn-primary" onclick="searchAgents(1)">T√¨m ki·∫øm</button>
    </div>
</div>
<div class="content-container">
    <div class="ai-grid" id="aiContainer">
        @if (Model.Agents != null && Model.Agents.Any())
        {
            foreach (var agent in Model.Agents)
            {
                var followerCount = agent.Follows?.Count() ?? 0;
                <div class="ai-container" tabindex="0" title="Xem chi ti·∫øt v·ªÅ @agent.Name" onclick="window.location.href='@Url.Action("Details", "Agent", new { id = agent.Id })'">
                    <div class="ai-header">
                        <div class="ai-logo-name">
                            <img src="@((!string.IsNullOrEmpty(agent.ImagePath) ? Url.Content("/" + agent.ImagePath.Replace("wwwroot/", "")) : "https://via.placeholder.com/50?text=AI"))" alt="@agent.Name" class="ai-logo" />
                            <h2 class="ai-name">@agent.Name</h2>
                        </div>
                        <div class="ai-states">
                            <span class="state state1">@(agent.IsActive ? "Active" : "Inactive")</span>
                            <span class="state state2">@agent.PaymentType?.Name</span>
                        </div>
                    </div>
                    <div class="ai-description">
                        <p>@agent.Description</p>
                    </div>
                    <div class="ai-footer">
                        <div class="ai-stats">
                            <span class="comment-count">üí¨ 0</span>
                            <span class="follower-count">‚ù§Ô∏è @followerCount</span>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div>Kh√¥ng c√≥ agent n√†o.</div>
        }
    </div>
    <div class="pagination mt-4" id="pagination"></div>
</div>
@section Scripts {
    <script>
        let currentPage = @Model.Page;
        let totalPages = @Model.TotalPages;
        function searchAgents(page) {
            const searchTerm = document.getElementById('searchTerm').value;
            const categoryId = document.getElementById('categoryId').value;
            const paymentTypeId = document.getElementById('paymentTypeId').value;
            window.location.href = `@Url.Action("Search", "Agent")?searchTerm=${encodeURIComponent(searchTerm)}&categoryId=${categoryId}&paymentTypeId=${paymentTypeId}&page=${page}`;
        }
        function renderPagination() {
            let html = '';
            for (let i = 1; i <= totalPages; i++) {
                html += `<button class='btn btn-sm ${i === currentPage ? "btn-primary" : "btn-outline-primary"}' onclick='searchAgents(${i})'>${i}</button> `;
            }
            document.getElementById('pagination').innerHTML = html;
        }
        renderPagination();
    </script>
}
